name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 1. Setup - 환경 설정
  setup:
    timeout-minutes: 10
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Install pnpm
      run: npm install -g pnpm@9

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Find pnpm location and copy to workspace
      run: |
        PNPM_PATH=$(which pnpm)
        echo "pnpm found at: $PNPM_PATH"
        cp "$PNPM_PATH" ./pnpm
        chmod +x ./pnpm
        echo "pnpm copied to workspace"

    - name: Upload pnpm and dependencies
      uses: actions/upload-artifact@v4
      with:
        name: pnpm-and-deps
        path: |
          node_modules/
          pnpm
        retention-days: 1

  # 2. E2E Tests - 테스트 실행
  e2e-tests:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        browser: [chromium, firefox, webkit, mobile-chrome, mobile-safari]
      fail-fast: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Download pnpm and dependencies
      uses: actions/download-artifact@v4
      with:
        name: pnpm-and-deps
        path: ./

    - name: Restore pnpm
      run: |
        sudo cp pnpm /usr/local/bin/pnpm
        sudo chmod +x /usr/local/bin/pnpm

    - name: Verify pnpm
      run: pnpm --version

    - name: Build application
      run: pnpm build --filter=game-notification-assistant

    - name: Install Playwright browsers
      run: pnpm --filter=e2e exec playwright install --with-deps ${{ matrix.browser }}

    - name: Run E2E tests - ${{ matrix.browser }}
      run: pnpm --filter=e2e test --project=${{ matrix.browser }}
      env:
        # GitHub Secrets
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_PUBLISHABLE_KEY }}
        SUPABASE_SECRET_KEY: ${{ secrets.SUPABASE_SECRET_KEY }}
        NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
        NEXT_PUBLIC_API_BASE_URL: ${{ secrets.NEXT_PUBLIC_API_BASE_URL }}
        KAKAO_REST_API_KEY: ${{ secrets.KAKAO_REST_API_KEY }}
        KAKAO_CLIENT_SECRET: ${{ secrets.KAKAO_CLIENT_SECRET }}
        GOOGLE_CLOUD_API_KEY: ${{ secrets.GOOGLE_CLOUD_API_KEY }}
        CRON_SECRET: ${{ secrets.CRON_SECRET }}
        # CI 환경 변수
        CI: true
        HEADLESS: true
        SHOW_STEP_LOG: false

    - name: Upload test results - ${{ matrix.browser }}
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-results-${{ matrix.browser }}
        path: |
          apps/e2e/test-results/
          apps/e2e/playwright-report/
        retention-days: 7
